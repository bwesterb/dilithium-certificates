



LAMPS WG                                                      J. Massimo
Internet-Draft                                             P. Kampanakis
Intended status: Experimental                                        AWS
Expires: 4 August 2022                                   31 January 2022


         Algorithms and Identifiers for Post-Quantum Algorithms
            in the Internet X.509 Public Key Infrastructure
                  draft-ietf-massimo-lamps-pq-pkix-00

Abstract

   Digital signatures are an authentication mechanism used within X.509
   certificates, Certificate Revocation Lists (CRLs), and to sign
   messages.  This document updates the "Algorithms and Identifiers for
   the Internet X.509 Public Key Infrastructure Certificate and
   Certificate Revocation List (CRL) Profile" [RFC 3279] and describes
   the conventions for using Dilithium quantum-resistant signatures in
   Internet X.509 certificates and revocation lists.  The conventions
   for the associated post-quantum signatures, subject public keys,
   private key are also described.

Note

   [EDNOTE: This draft is not expected to be finalized before the NIST
   PQC Project has standardized PQ algorithms.  After NIST has
   standardized this document will replace TBD, with the appropriate
   algorithms and parameters before proceeding to ratification.  The
   algorithm Dilithium has been added as an example in this draft, to
   provide a more detailed illustration of the content - it by no means
   indicates its inclusion in the final version.  This specification
   will use object identifiers for the new algorithms that are assigned
   by NIST, and will use placeholders until these are released.]

Status of This Memo

   This Internet-Draft is submitted in full conformance with the
   provisions of BCP 78 and BCP 79.

   Internet-Drafts are working documents of the Internet Engineering
   Task Force (IETF).  Note that other groups may also distribute
   working documents as Internet-Drafts.  The list of current Internet-
   Drafts is at https://datatracker.ietf.org/drafts/current/.

   Internet-Drafts are draft documents valid for a maximum of six months
   and may be updated, replaced, or obsoleted by other documents at any
   time.  It is inappropriate to use Internet-Drafts as reference
   material or to cite them other than as "work in progress."



Massimo & Kampanakis      Expires 4 August 2022                 [Page 1]

Internet-Draft        Dilithium Signatures in X.509         January 2022


   This Internet-Draft will expire on 4 August 2022.

Copyright Notice

   Copyright (c) 2022 IETF Trust and the persons identified as the
   document authors.  All rights reserved.

   This document is subject to BCP 78 and the IETF Trust's Legal
   Provisions Relating to IETF Documents (https://trustee.ietf.org/
   license-info) in effect on the date of publication of this document.
   Please review these documents carefully, as they describe your rights
   and restrictions with respect to this document.  Code Components
   extracted from this document must include Simplified BSD License text
   as described in Section 4.e of the Trust Legal Provisions and are
   provided without warranty as described in the Simplified BSD License.

Table of Contents

   1.  Introduction  . . . . . . . . . . . . . . . . . . . . . . . .   2
     1.1.  Requirements Language . . . . . . . . . . . . . . . . . .   3
   2.  Signature Algorithms  . . . . . . . . . . . . . . . . . . . .   3
     2.1.  Dilithium Signature Algorithm . . . . . . . . . . . . . .   4
     2.2.  TBD Signature Algorithm . . . . . . . . . . . . . . . . .   4
   3.  Subject Public Key Fields . . . . . . . . . . . . . . . . . .   4
     3.1.  Dilithium Public Keys . . . . . . . . . . . . . . . . . .   4
     3.2.  TBD Public Keys . . . . . . . . . . . . . . . . . . . . .   5
   4.  Private Key Format  . . . . . . . . . . . . . . . . . . . . .   5
     4.1.  Dilithium Private Keys  . . . . . . . . . . . . . . . . .   5
     4.2.  TBD Private Keys  . . . . . . . . . . . . . . . . . . . .   5
   5.  ASN.1 Module  . . . . . . . . . . . . . . . . . . . . . . . .   6
   6.  IANA Considerations . . . . . . . . . . . . . . . . . . . . .   6
   7.  Security Considerations . . . . . . . . . . . . . . . . . . .   6
   8.  References  . . . . . . . . . . . . . . . . . . . . . . . . .   7
     8.1.  Normative References  . . . . . . . . . . . . . . . . . .   7
     8.2.  Informative References  . . . . . . . . . . . . . . . . .   7
   Appendix A.  Acknowledgements . . . . . . . . . . . . . . . . . .   8
   Appendix B.  Appendix . . . . . . . . . . . . . . . . . . . . . .   8
   Authors' Addresses  . . . . . . . . . . . . . . . . . . . . . . .   8

1.  Introduction

   The US National Institute of Standards and Technology (NIST) Post-
   Quantum Cryptography (PQC) effort has defined quantum-resistant
   public-key cryptographic algorithm standards [NIST-PQC].  This
   document supplements [RFC3279] and will specify the use of these
   Post-Quantum public key algorithms with Public Key Infrastructure
   X.509 (PKIX) certificates.  These specifications will use object
   identifiers algorithms that are assigned by NIST.



Massimo & Kampanakis      Expires 4 August 2022                 [Page 2]

Internet-Draft        Dilithium Signatures in X.509         January 2022


   This specification defines additional content for the
   signatureAlgorithm, signatureValue, signature, and
   subjectPublicKeyInfo fields within Internet X.509 certificates
   [RFC3279] and CRLs [RFC5280].  This specification describes the
   encoding of digital signatures generated with the following
   cryptographic algorithms: Dilithium.

1.1.  Requirements Language

   The key words "MUST", "MUST NOT", "REQUIRED", "SHALL", "SHALL NOT",
   "SHOULD", "SHOULD NOT", "RECOMMENDED", "MAY", and "OPTIONAL" in this
   document are to be interpreted as described in RFC 2119 [RFC2119].

2.  Signature Algorithms

   Signatures are used in a number of different ASN.1 structures.  As
   shown in the ASN.1 representation from [RFC5280] below, in an X.509
   certificate, a signature is encoded with an algorithm identifier in
   the signatureAlgorithm attribute and a signatureValue attribute that
   contains the actual signature.

      Certificate  ::=  SEQUENCE  {
         tbsCertificate       TBSCertificate,
         signatureAlgorithm   AlgorithmIdentifier,
         signatureValue       BIT STRING  }

   The identifiers defined in Section 2.1 can be used as the
   AlgorithmIdentifier in the signatureAlgorithm field in the sequence
   Certificate and the signature field in the sequence TBSCertificate in
   X.509 [RFC5280].  The parameters of these signature algorithms are
   absent, as explained in Section 2.1.

   Conforming Certification Authority (CA) implementations MUST specify
   the algorithms explicitly by using the OIDs specified in Section 2.1
   when encoding Dilithium signatures in certificates and CRLs.
   Conforming client implementations that process certificates and CRLs
   using Dilithium MUST recognize the corresponding OIDs.  Encoding
   rules for Dilithium signature values are specified Section 2.1.

   This section identifies OIDS for the post-quantum Dilithium digital
   signature algorithms.  The contents of the parameters component for
   each algorithm are absent, as explained in Section 2.1









Massimo & Kampanakis      Expires 4 August 2022                 [Page 3]

Internet-Draft        Dilithium Signatures in X.509         January 2022


2.1.  Dilithium Signature Algorithm

   Dilithium is a digital signature scheme built upon the Fiat-Shamir
   with aborts framework [Fiat-Shamir].  The security is based upon the
   hardness of lattice problems over module lattices [Dilithium].
   Dilithium provides 3 parameter sets for the security categories 2,3
   and 5.

   When SHAKE-256 is used, the OIDs are:

      id-dilithiumTBD-shake256 OBJECT IDENTIFIER ::= { joint-iso-itu-t(2)
               country(16) us(840) organization(1) gov(101) csor(3)
               nistAlgorithm(4) hashAlgs(2) TBD }

   When the id-dilithiumTBD-shake256 identifier appears in the algorithm
   field as an AlgorithmIdentifier, the encoding MUST omit the
   parameters field.  That is, the AlgorithmIdentifier SHALL be a
   SEQUENCE of one component, the OID id-dilithiumTBD-shake256.

2.2.  TBD Signature Algorithm

   TBD

3.  Subject Public Key Fields

3.1.  Dilithium Public Keys

   The public parameters for Dilithium are based upon a polynomial ring
   R_q for prime q.  A (k*l) public matrix A is produced, consisting of
   polynomials whose coefficients are sampled uniformly at random from
   the integers modulo q.  This sampling is performed by expanding a
   nonce rho using an XOF.

   The Dilithium public key MUST be encoded using the ASN.1 type
   DilithiumPublicKey:

     DilithiumPublicKey ::= OCTET STRING

   where DilithiumPublicKey is a concatenation of rho and t1.  Here, rho
   is the nonce used to seed the XOF to produce the matrix A, and t1 is
   a vector encoded in 320*k bytes where k is the rank of the vector
   over the polynomial ring R_q.  The size required to hold all public
   key elements is therefore 32+320*k bytes.

   The AlgorithmIdentifier within SubjectPublicKeyInfo is the only place
   within a certificate where the parameters may be used.  If the
   Dilithium parameters are specified as implicitlyCA in the
   SubjectPublicKeyInfo AlgorithmIdentifier and the CA signed the



Massimo & Kampanakis      Expires 4 August 2022                 [Page 4]

Internet-Draft        Dilithium Signatures in X.509         January 2022


   subject certificate using Dilithium, then the certificate issuer's
   Dilithium parameters apply to the subject's Dilithium key.  If the
   Dilithium parameters are specified as implicitlyCA in the
   SubjectPublicKeyInfo AlgorithmIdentifier and the CA signed the
   certificate using a signature algorithm other than Dilithium, then
   clients MUST not make use of the Dilithium public key.

3.2.  TBD Public Keys

   TBD

4.  Private Key Format

4.1.  Dilithium Private Keys

   A Dilithium private key is encoded as DilithiumPrivateKey in the
   privateKey field as an OCTET STRING.  Dilithium public keys are
   optionally distributed in the publicKey field of the PrivateKeyInfo
   structure.

   The ASN.1 encoding for a Dilithium private key is as follows:

     DilithiumPrivateKey ::= SEQUENCE {
         rho         BIT STRING,         -- nonce/seed
         K           BIT STRING,         -- key/seed
         tr          BIT STRING,         -- PRF bytes (CRH in spec.)
         s1          BIT STRING,         -- vector l
         s2          BIT STRING,         -- vector k
         t0          BIT STRING,         -- encoded vector
         PublicKey   IMPLICIT DilithiumPublicKey OPTIONAL
     }

   Dilithium offers both deterministic and randomized signing.  The
   deterministic version creates a signature based on a function of the
   key K and the message, whereas the randomized version instead selects
   these values at random.  The randomized version can be invoked by
   leaving K as EMPTY.

   A fully populated Dilithium private key consists of 6 parameters.
   The size necessary to hold all private key elements is
   32+32+32+32*[(k+l)*ceiling(log(2*eta+1))+13*k] bytes (where k, l, eta
   are as described in DilithiumParameters).  The public key and secret
   key sizes for security levels 2, 3, and 5 can be found in Figure 1.

4.2.  TBD Private Keys

   TBD




Massimo & Kampanakis      Expires 4 August 2022                 [Page 5]

Internet-Draft        Dilithium Signatures in X.509         January 2022


5.  ASN.1 Module

   For reference purposes, the ASN.1 syntax is presented as an ASN.1
   module here.

   ASN.1 Module

     PKIX1-PQ-Algorithms { iso(1) identified-organization(3) dod(6)
        internet(1) security(5) mechanisms(5) pkix(7) id-mod(0)
        id-mod-pkix1-PQ-algorithms(X) }

     DEFINITIONS EXPLICIT TAGS ::= BEGIN

     [ EDNOTE: Add ASN.1 here ]

6.  IANA Considerations

   Extensions in certificates and CRLs are identified using object
   Identifiers (OIDs).  The creation and delegation of these arcs is to
   be determined.

7.  Security Considerations

   This document updates RFC 3279 [RFC3279].  The Security
   Considerations section of that document therefore applies to this
   specification as well.

   Instead of defining the strength of a quantum algorithm in a
   traditional manner using precise estimates of the number of "bits of
   security," NIST has instead elected to define a collection of broad
   security strength categories.  Each category is defined by a
   comparatively easy-to-analyze reference primitive that cover a range
   of security strengths offered by existing NIST standards in symmetric
   cryptography, which NIST expects to offer significant resistance to
   quantum cryptanalysis.  These categories describe any attack that
   breaks the relevant security definition that must require
   computational resources comparable to or greater than those required
   for: Level 1 - key search on a block cipher with a 128-bit key (e.g.,
   AES128), Level 2 - collision search on a 256-bit hash function (e.g.,
   SHA256/ SHA3-256), Level 3 - key search on a block cipher with a
   192-bit key (e.g., AES192), Level 4 - collision search on a 384-bit
   hash function (e.g.  SHA384/ SHA3-384), Level 5 - key search on a
   block cipher with a 256-bit key (e.g., AES 256).

   TODO: Add discussion about digests in classical signatures hash-then-
   sign and how that does not apply to PQ like Dilithium.  And how
   committing to a message is additional security.  Reference NIST
   discussion from Peiker and Makku.



Massimo & Kampanakis      Expires 4 August 2022                 [Page 6]

Internet-Draft        Dilithium Signatures in X.509         January 2022


   EDNOTE: Discuss implications of not hash-them-sign.  Implications in
   performance too.

   A fundamental security property associated with digital signatures is
   non-repudiation.  Non-repudiation refers to the assurance that the
   owner of a signature key pair that was capable of generating an
   existing signature corresponding to certain data cannot convincingly
   deny having signed the data.  The digital signature scheme Dilithium
   possess two security properties associated with non-repudiation.
   These are "strong binding" and "message binding", based tightly on
   the assumed collision resistance of the hash function used (in this
   case SHAKE-256).  TODO: Describe strong binding and message binding.
   Strong binding (and the related collision attack countermeasure) is
   dependent on unambiguous public key serialization.  It for this
   reason the public key structure defined in Section 3 is intentionally
   encoded as a single OCTET STRING.

8.  References

8.1.  Normative References

   [NIST-PQC] National Institute of Standards and Technology (NIST),
              "Post-Quantum Cryptography", 2016,
              <https://csrc.nist.gov/Projects/post-quantum-cryptography/
              post-quantum-cryptography-standardization/Call-for-
              Proposals>.

   [RFC2119]  Bradner, S., "Key words for use in RFCs to Indicate
              Requirement Levels", BCP 14, RFC 2119,
              DOI 10.17487/RFC2119, March 1997,
              <https://www.rfc-editor.org/info/rfc2119>.

   [RFC3279]  Bassham, L., Polk, W., and R. Housley, "Algorithms and
              Identifiers for the Internet X.509 Public Key
              Infrastructure Certificate and Certificate Revocation List
              (CRL) Profile", RFC 3279, DOI 10.17487/RFC3279, April
              2002, <https://www.rfc-editor.org/info/rfc3279>.

   [RFC5280]  Cooper, D., Santesson, S., Farrell, S., Boeyen, S.,
              Housley, R., and W. Polk, "Internet X.509 Public Key
              Infrastructure Certificate and Certificate Revocation List
              (CRL) Profile", RFC 5280, DOI 10.17487/RFC5280, May 2008,
              <https://www.rfc-editor.org/info/rfc5280>.

8.2.  Informative References






Massimo & Kampanakis      Expires 4 August 2022                 [Page 7]

Internet-Draft        Dilithium Signatures in X.509         January 2022


   [Dilithium]
              Bai, S., Ducas, L., Lepoint, T., Lyubashevsky, V.,
              Schwabe, P., Seiler, G., and D. Stehlé, "CRYSTALS-
              Dilithium Algorithm Specifications and Supporting
              Documentation", 2021, <https://pq-
              crystals.org/dilithium/data/dilithium-specification-
              round3-20210208.pdf>.

   [Fiat-Shamir]
              Lyubashevsky, V., "Fiat-Shamir with aborts: Applications
              to lattice and factoring-based signatures", International
              Conference on the Theory and Application of Cryptology and
              Information Security, 2009, <https://www.iacr.org/archive/
              asiacrypt2009/59120596/59120596.pdf>.

Appendix A.  Acknowledgements

   We would like to thank ... for their insightful comments.

Appendix B.  Appendix

   The parameter sets defined for NIST security levels 2, 3 and 5 are
   listed in the Figure 1, along with the resulting public key and
   private key sizes in bytes.

  |==========+=====+=========+=======+=====+========+========+=========|
  | Security |  n  |    q    | (k,l) | eta | gamma1 | Public | Private |
  | Level    |     |         |       |     |        | Key(B) | Key(B)  |
  |==========+=====+=========+=======+=====+========+========+=========|
  | 2        | 256 | 8380417 | (4,4) |  2  |  2^17  |  1312  |   2528  |
  | 3        | 256 | 8380417 | (6,5) |  4  |  2^19  |  1952  |   4000  |
  | 5        | 256 | 8380417 | (8,7) |  2  |  2^19  |  2596  |   4864  |
  |==========+=====+=========+=======+=====+========+========+=========|

                                 Figure 1

Authors' Addresses

   Jake Massimo
   AWS
   United States of America

   Email: jakemas@amazon.com








Massimo & Kampanakis      Expires 4 August 2022                 [Page 8]

Internet-Draft        Dilithium Signatures in X.509         January 2022


   Panos Kampanakis
   AWS
   United States of America

   Email: kpanos@amazon.com














































Massimo & Kampanakis      Expires 4 August 2022                 [Page 9]
