



LAMPS WG                                                      J. Massimo
Internet-Draft                                             P. Kampanakis
Updates: RFC3279 (if approved)                                       AWS
Intended status: Experimental                           12 February 2022
Expires: 16 August 2022


         Algorithms and Identifiers for Post-Quantum Algorithms
            in the Internet X.509 Public Key Infrastructure
                    draft-massimo-dilithium-pkix-00

Abstract

   Digital signatures are used within X.509 certificates, Certificate
   Revocation Lists (CRLs), and to sign messages.  This document updates
   the "Algorithms and Identifiers for the Internet X.509 Public Key
   Infrastructure Certificate and Certificate Revocation List (CRL)
   Profile" [RFC 3279] and describes the conventions for using Dilithium
   quantum-resistant signatures in Internet X.509 certificates and
   revocation lists.  The conventions for the associated post-quantum
   signatures, subject public keys, and private key are also described.

Note

   [EDNOTE: This draft is not expected to be finalized before the NIST
   PQC Project has standardized PQ algorithms.  After NIST has
   standardized its first algorithms, this document will replace TBD,
   with the appropriate algorithms and parameters before proceeding to
   ratification.  The algorithm Dilithium has been added as an example
   in this draft, to provide a more detailed illustration of the content
   - it by no means indicates its inclusion in the final version.  This
   specification will use object identifiers for the new algorithms that
   are assigned by NIST, and will use placeholders until these are
   released.]

Status of This Memo

   This Internet-Draft is submitted in full conformance with the
   provisions of BCP 78 and BCP 79.

   Internet-Drafts are working documents of the Internet Engineering
   Task Force (IETF).  Note that other groups may also distribute
   working documents as Internet-Drafts.  The list of current Internet-
   Drafts is at https://datatracker.ietf.org/drafts/current/.

   Internet-Drafts are draft documents valid for a maximum of six months
   and may be updated, replaced, or obsoleted by other documents at any




Massimo & Kampanakis     Expires 16 August 2022                 [Page 1]

Internet-Draft        Dilithium Signatures in X.509        February 2022


   time.  It is inappropriate to use Internet-Drafts as reference
   material or to cite them other than as "work in progress."

   This Internet-Draft will expire on 16 August 2022.

Copyright Notice

   Copyright (c) 2022 IETF Trust and the persons identified as the
   document authors.  All rights reserved.

   This document is subject to BCP 78 and the IETF Trust's Legal
   Provisions Relating to IETF Documents (https://trustee.ietf.org/
   license-info) in effect on the date of publication of this document.
   Please review these documents carefully, as they describe your rights
   and restrictions with respect to this document.  Code Components
   extracted from this document must include Simplified BSD License text
   as described in Section 4.e of the Trust Legal Provisions and are
   provided without warranty as described in the Simplified BSD License.

Table of Contents

   1.  Introduction  . . . . . . . . . . . . . . . . . . . . . . . .   2
     1.1.  Requirements Language . . . . . . . . . . . . . . . . . .   3
   2.  Identifiers . . . . . . . . . . . . . . . . . . . . . . . . .   3
   3.  Dilithium Signatures in PKIX  . . . . . . . . . . . . . . . .   3
   4.  Dilithium Public Keys in PKIX . . . . . . . . . . . . . . . .   4
   5.  ASN.1 Module  . . . . . . . . . . . . . . . . . . . . . . . .   5
   6.  IANA Considerations . . . . . . . . . . . . . . . . . . . . .   7
   7.  Security Considerations . . . . . . . . . . . . . . . . . . .   7
   8.  References  . . . . . . . . . . . . . . . . . . . . . . . . .   8
     8.1.  Normative References  . . . . . . . . . . . . . . . . . .   8
     8.2.  Informative References  . . . . . . . . . . . . . . . . .   9
   Appendix A.  Acknowledgements . . . . . . . . . . . . . . . . . .   9
   Appendix B.  Appendix . . . . . . . . . . . . . . . . . . . . . .   9
   Authors' Addresses  . . . . . . . . . . . . . . . . . . . . . . .  10

1.  Introduction

   The US National Institute of Standards and Technology (NIST) Post-
   Quantum Cryptography (PQC) effort has defined quantum-resistant
   public-key cryptographic algorithm standards [NIST-PQC].  This
   document updates [RFC3279] and will specify the use of these Post-
   Quantum public key algorithms with Public Key Infrastructure X.509
   (PKIX) certificates using object identifiers algorithms assigned by
   NIST.

   This specification defines additional content for the
   signatureAlgorithm, signatureValue, signature, and



Massimo & Kampanakis     Expires 16 August 2022                 [Page 2]

Internet-Draft        Dilithium Signatures in X.509        February 2022


   subjectPublicKeyInfo fields within Internet X.509 certificates
   [RFC3279] and CRLs [RFC5280].  It describes the encoding of digital
   signatures and public generated with quantum-resistant signature
   algorithm Dilithium.

1.1.  Requirements Language

   The key words "MUST", "MUST NOT", "REQUIRED", "SHALL", "SHALL NOT",
   "SHOULD", "SHOULD NOT", "RECOMMENDED", "MAY", and "OPTIONAL" in this
   document are to be interpreted as described in RFC 2119 [RFC2119].

2.  Identifiers

   This specification uses object identifiers for the new algorithms
   that are assigned by NIST, and will use placeholders until these are
   released.

   The AlgorithmIdentifier type, which is included herein for
   convenience, is defined as follows:

      AlgorithmIdentifier  ::=  SEQUENCE  {
          algorithm   OBJECT IDENTIFIER,
          parameters  ANY DEFINED BY algorithm OPTIONAL
      }

      |  NOTE: The above syntax is from [RFC5280] and matches the
      |  version used therein, i.e., the 1988 ASN.1 syntax.  See
      |  [RFC5912] for ASN.1 copmatible with the 2015 ASN.1 syntax.

   The OIDs are:

      id-dilithiumTBD-shake256 OBJECT IDENTIFIER ::= { joint-iso-itu-t(2)
               country(16) us(840) organization(1) gov(101) csor(3)
               nistAlgorithm(4) hashAlgs(2) TBD }

   The contents of the parameters component for each algorithm are
   absent.

3.  Dilithium Signatures in PKIX

   Dilithium is a digital signature scheme built upon the Fiat-Shamir
   with aborts framework [Fiat-Shamir].  The security is based upon the
   hardness of lattice problems over module lattices [Dilithium].
   Dilithium provides 3 parameter sets for the security categories 2,3
   and 5.

   Signatures are used in a number of different ASN.1 structures.  As
   shown in the ASN.1 representation from [RFC5280] below, in an X.509



Massimo & Kampanakis     Expires 16 August 2022                 [Page 3]

Internet-Draft        Dilithium Signatures in X.509        February 2022


   certificate, a signature is encoded with an algorithm identifier in
   the signatureAlgorithm attribute and a signatureValue attribute that
   contains the actual signature.

      Certificate  ::=  SEQUENCE  {
         tbsCertificate       TBSCertificate,
         signatureAlgorithm   AlgorithmIdentifier,
         signatureValue       BIT STRING  }

   The identifiers defined in Section 2 can be used as the
   AlgorithmIdentifier in the signatureAlgorithm field in the sequence
   Certificate and the signature field in the sequence TBSCertificate in
   X.509 [RFC5280].  The parameters of these signature algorithms are
   absent, as explained in Section 2.

   The signatureValue field contains the corresponding Dilithium
   signature computed upon the ASN.1 DER encoded tbsCertificate
   [RFC5280].

   Conforming Certification Authority (CA) implementations MUST specify
   the algorithms explicitly by using the OIDs specified in Section 2
   when encoding Dilithium signatures in certificates and CRLs.
   Conforming client implementations that process certificates and CRLs
   using Dilithium MUST recognize the corresponding OIDs.  Encoding
   rules for Dilithium signature values are specified Section 2.

   When the id-dilithiumTBD-shake256 identifier appears in the algorithm
   field as an AlgorithmIdentifier, the encoding MUST omit the
   parameters field.  That is, the AlgorithmIdentifier SHALL be a
   SEQUENCE of one component, the OID id-dilithiumTBD-shake256.

4.  Dilithium Public Keys in PKIX

   In the X.509 certificate, the subjectPublicKeyInfo field has the
   SubjectPublicKeyInfo type, which has the following ASN.1 syntax:

     SubjectPublicKeyInfo  ::=  SEQUENCE  {
         algorithm         AlgorithmIdentifier,
         subjectPublicKey  BIT STRING
     }

   The public parameters for Dilithium are based upon a polynomial ring
   R_q for prime q.  A (k*l) public matrix A is produced, consisting of
   polynomials whose coefficients are sampled uniformly at random from
   the integers modulo q.  This sampling is performed by expanding a
   nonce rho using an XOF.





Massimo & Kampanakis     Expires 16 August 2022                 [Page 4]

Internet-Draft        Dilithium Signatures in X.509        February 2022


   The Dilithium public key MUST be encoded using the ASN.1 type
   DilithiumPublicKey:

     DilithiumPublicKey ::= OCTET STRING

   where DilithiumPublicKey is a concatenation of rho and t1.  Here, rho
   is the nonce used to seed the XOF to produce the matrix A, and t1 is
   a vector encoded in 320*k bytes where k is the rank of the vector
   over the polynomial ring R_q.  These parameters MUST be encoded as a
   single OCTET STRING.  The size required to hold a DilithiumPublicKey
   public key element is therefore 32+320*k bytes.

   The id-dilithiumTBD-shake256 identifier defined in Section 2 MUST be
   used as the algorithm field in the SubjectPublicKeyInfo sequence
   [RFC5280]. to identify a Dilithium public key.

   The intended application for the key is indicated in the keyUsage
   certificate extension; see Section 4.2.1.3 of [RFC5280].  If the
   keyUsage extension is present in a certificate that indicates id-
   dilithiumTBD-shake256 in the SubjectPublicKeyInfo, then the at least
   one of following MUST be present:

     digitalSignature; or
     nonRepudiation; or
     keyCertSign; or
     cRLSign.

   Requirements about the keyUsage extension bits defined in [RFC5280]
   still apply.

   Conforming CA implementations MUST specify the X.509 public key
   algorithm explicitly by using the OIDs specified in this
   specification when Dilithium public keys in certificates and CRLs.
   Conforming client implementations that process Dilithium public keys
   when processing certificates and CRLs MUST recognize the
   corresponding OIDs.

5.  ASN.1 Module

   This section includes the ASN.1 module for Post-Quantum algorithms in
   X.509.  This module does not come from any previously existing RFC.
   This module references [RFC5912].









Massimo & Kampanakis     Expires 16 August 2022                 [Page 5]

Internet-Draft        Dilithium Signatures in X.509        February 2022


   [ EDNOTE: Add ASN.1 here ]

     PKIX1-PQ-Algorithms { iso(1) identified-organization(3) dod(6)
        internet(1) security(5) mechanisms(5) pkix(7) id-mod(0)
        id-mod-pkix1-PQ-algorithms(X) }

     DEFINITIONS EXPLICIT TAGS ::=

     BEGIN

     -- EXPORTS ALL;

     IMPORTS

     -- FROM RFC 5912

     PUBLIC-KEY, SIGNATURE-ALGORITHM, DIGEST-ALGORITHM, SMIME-CAPS
     FROM AlgorithmInformation-2009
       { iso(1) identified-organization(3) dod(6) internet(1) security(5)
         mechanisms(5) pkix(7) id-mod(0)
         id-mod-algorithmInformation-02(58) }

     --
     -- Public Key (pk-) Algorithms
     --
     PublicKeys PUBLIC-KEY ::= {
       -- This expands PublicKeys from RFC 5912
       pk-dilithiumTBD-shake256 |
       pk-TBD-TBD,
       ...
     }

     -- The hashAlgorithm is mda-shake256
     -- The XOF seed rho is 32 bytes
     -- The vector t1 is 320*k bytes
     -- These are encoded as a single string
     pk-dilithiumTBD-shake256 PUBLIC-KEY ::= {
       IDENTIFIER id-dilithiumTBD-shake256
       KEY DilithiumPublicKey
       PARAMS ARE absent
       CERT-KEY-USAGE { nonRepudiation, digitalSignature,
                       keyCertSign, cRLSign }
       PRIVATE-KEY DilithiumPrivateKey
     }







Massimo & Kampanakis     Expires 16 August 2022                 [Page 6]

Internet-Draft        Dilithium Signatures in X.509        February 2022


     --
     -- Signature Values
     --

     -- Dilithium

     -- z is the bit packed representation of the signature
     -- vector. z is 32l(1 + log gamma1) bytes, where l is
     -- the rank of the vector over R_q and gamma1 is the
     -- bound on size of the coefficients used for signing.
     -- The hint h is an encoded vector of bits which requires
     -- omega + k bytes where omega is the number of ones
     -- in h and k is the rank of the vector over R_q.
     -- The challenge c is 32 bytes.
     Dilithium-Sig-Value ::= SEQUENCE {
        z  OCTET STRING,
        h  OCTET STRING,
        c  OCTET STRING
      }

     END

6.  IANA Considerations

   Extensions in certificates and CRLs are identified using object
   Identifiers (OIDs).  The creation and delegation of these arcs is to
   be determined.

   One object identifier for the ASN.1 module in the Appendix.

7.  Security Considerations

   This document updates RFC 3279 [RFC3279].  The Security
   Considerations section of that document therefore applies to this
   specification as well.

   The digital signature scheme defined within this document are modeled
   under existentially unforgeable digital signatures with respect to an
   adaptive chosen message attack (EUF-CMA).  For the purpose of
   estimating security strength, it has been assumed that the attacker
   has access to signatures for no more than 2^{64} chosen messages.

   EDNOTE: Discuss implications of not hash-then-sign.  Implications in
   performance too.

   EDNOTE: Discuss side-channels for Dilithium. .





Massimo & Kampanakis     Expires 16 August 2022                 [Page 7]

Internet-Draft        Dilithium Signatures in X.509        February 2022


   A fundamental security property also associated with digital
   signatures is non-repudiation.  Non-repudiation refers to the
   assurance that the owner of a signature key pair that was capable of
   generating an existing signature corresponding to certain data cannot
   convincingly deny having signed the data.  The digital signature
   scheme Dilithium possess three security properties beyond
   unforgeability, that are associated with non-repudiation.  These are
   exclusive ownership, message-bound signatures, and non-resignability.
   These properties are based tightly on the assumed collision
   resistance of the hash function used (in this case SHAKE-256).
   Exclusive ownership is a property in which a signature sigma uniquely
   determines the public key and message for which it is valid.
   Message-bound signatures is the property that a valid signature
   uniquely determines the message for which it is valid, but not
   necessarily the public key.  Non-resignability is the property in
   which one cannot produce a valid signature under another key given a
   signature sigma for some unknown message m.  These properties are not
   provided by classical signature schemes such as DSA or ECDSA, and
   have led to a variety of attacks such as Duplicate-Signature Key
   Selection (DSKS) attacks , and attacks on the protocols for secure
   routing . A full discussion of these properties in Dilithium can be
   found at [CDFFJ21].  These properties are dependent in part, on
   unambiguous public key serialization.  It for this reason the public
   key structure defined in Section 4 are intentionally encoded as a
   single OCTET STRING.

8.  References

8.1.  Normative References

   [NIST-PQC] National Institute of Standards and Technology (NIST),
              "Post-Quantum Cryptography", 2016,
              <https://csrc.nist.gov/Projects/post-quantum-cryptography/
              post-quantum-cryptography-standardization/Call-for-
              Proposals>.

   [RFC2119]  Bradner, S., "Key words for use in RFCs to Indicate
              Requirement Levels", BCP 14, RFC 2119,
              DOI 10.17487/RFC2119, March 1997,
              <https://www.rfc-editor.org/info/rfc2119>.

   [RFC3279]  Bassham, L., Polk, W., and R. Housley, "Algorithms and
              Identifiers for the Internet X.509 Public Key
              Infrastructure Certificate and Certificate Revocation List
              (CRL) Profile", RFC 3279, DOI 10.17487/RFC3279, April
              2002, <https://www.rfc-editor.org/info/rfc3279>.





Massimo & Kampanakis     Expires 16 August 2022                 [Page 8]

Internet-Draft        Dilithium Signatures in X.509        February 2022


   [RFC5280]  Cooper, D., Santesson, S., Farrell, S., Boeyen, S.,
              Housley, R., and W. Polk, "Internet X.509 Public Key
              Infrastructure Certificate and Certificate Revocation List
              (CRL) Profile", RFC 5280, DOI 10.17487/RFC5280, May 2008,
              <https://www.rfc-editor.org/info/rfc5280>.

   [RFC5912]  Hoffman, P. and J. Schaad, "New ASN.1 Modules for the
              Public Key Infrastructure Using X.509 (PKIX)", RFC 5912,
              DOI 10.17487/RFC5912, June 2010,
              <https://www.rfc-editor.org/info/rfc5912>.

8.2.  Informative References

   [CDFFJ21]  Cremers, Cas., Düzlü, S., Fiedler, R., Fischlin, M., and
              C. Janson, "BUFFing signature schemes beyond
              unforgeability and the case of post-quantum signatures",
              In Proceedings of the 42nd IEEE Symposium on Security and
              Privacy, 2021, <https://eprint.iacr.org/2020/1525.pdf>.

   [Dilithium]
              Bai, S., Ducas, L., Lepoint, T., Lyubashevsky, V.,
              Schwabe, P., Seiler, G., and D. Stehlé, "CRYSTALS-
              Dilithium Algorithm Specifications and Supporting
              Documentation", 2021, <https://pq-
              crystals.org/dilithium/data/dilithium-specification-
              round3-20210208.pdf>.

   [Fiat-Shamir]
              Lyubashevsky, V., "Fiat-Shamir with aborts: Applications
              to lattice and factoring-based signatures", International
              Conference on the Theory and Application of Cryptology and
              Information Security, 2009, <https://www.iacr.org/archive/
              asiacrypt2009/59120596/59120596.pdf>.

Appendix A.  Acknowledgements

   We would like to thank ... for their insightful comments.

Appendix B.  Appendix

   Instead of defining the strength of a quantum algorithm in a
   traditional manner using precise estimates of the number of "bits of
   security," NIST has instead elected to define a collection of broad
   security strength categories.  Each category is defined by a
   comparatively easy-to-analyze reference primitive that cover a range
   of security strengths offered by existing NIST standards in symmetric
   cryptography, which NIST expects to offer significant resistance to
   quantum cryptanalysis.  These categories describe any attack that



Massimo & Kampanakis     Expires 16 August 2022                 [Page 9]

Internet-Draft        Dilithium Signatures in X.509        February 2022


   breaks the relevant security definition that must require
   computational resources comparable to or greater than those required
   for: Level 1 - key search on a block cipher with a 128-bit key (e.g.,
   AES128), Level 2 - collision search on a 256-bit hash function (e.g.,
   SHA256/ SHA3-256), Level 3 - key search on a block cipher with a
   192-bit key (e.g., AES192), Level 4 - collision search on a 384-bit
   hash function (e.g.  SHA384/ SHA3-384), Level 5 - key search on a
   block cipher with a 256-bit key (e.g., AES 256).

   The parameter sets defined for NIST security levels 2, 3 and 5 are
   listed in the Figure 1, along with the resulting public key and
   private key sizes in bytes.

   |==========+=====+=========+=======+=====+========+========+=========|
   | Security |  n  |    q    | (k,l) | eta | gamma1 | Public | Private |
   | Level    |     |         |       |     |        | Key(B) | Key(B)  |
   |==========+=====+=========+=======+=====+========+========+=========|
   | 2        | 256 | 8380417 | (4,4) |  2  |  2^17  |  1312  |   2528  |
   | 3        | 256 | 8380417 | (6,5) |  4  |  2^19  |  1952  |   4000  |
   | 5        | 256 | 8380417 | (8,7) |  2  |  2^19  |  2596  |   4864  |
   |==========+=====+=========+=======+=====+========+========+=========|

                                  Figure 1

Authors' Addresses

   Jake Massimo
   AWS
   United States of America

   Email: jakemas@amazon.com


   Panos Kampanakis
   AWS
   United States of America

   Email: kpanos@amazon.com













Massimo & Kampanakis     Expires 16 August 2022                [Page 10]
